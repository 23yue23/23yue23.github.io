<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>蜗牛笔记</title>
  
  <subtitle>永不设限，尽在自律。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://23yue23.github.io/"/>
  <updated>2019-10-15T03:17:44.017Z</updated>
  <id>https://23yue23.github.io/</id>
  
  <author>
    <name>Yue</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>sql-常用篇</title>
    <link href="https://23yue23.github.io/2019/10/15/sql-%E5%B8%B8%E7%94%A8%E7%AF%87/"/>
    <id>https://23yue23.github.io/2019/10/15/sql-常用篇/</id>
    <published>2019-10-15T03:17:16.000Z</published>
    <updated>2019-10-15T03:17:44.017Z</updated>
    
    <content type="html"><![CDATA[<h4 id="编程规范"><a href="#编程规范" class="headerlink" title="编程规范"></a>编程规范</h4><p><a href="https://www.sqlstyle.guide/zh/" target="_blank" rel="noopener">https://www.sqlstyle.guide/zh/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;编程规范&quot;&gt;&lt;a href=&quot;#编程规范&quot; class=&quot;headerlink&quot; title=&quot;编程规范&quot;&gt;&lt;/a&gt;编程规范&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://www.sqlstyle.guide/zh/&quot; target=&quot;_blank&quot; rel=&quot;
      
    
    </summary>
    
      <category term="sql" scheme="https://23yue23.github.io/categories/sql/"/>
    
    
      <category term="sql-常用篇" scheme="https://23yue23.github.io/tags/sql-%E5%B8%B8%E7%94%A8%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>详细文档设计规范</title>
    <link href="https://23yue23.github.io/2019/10/15/%E8%AF%A6%E7%BB%86%E6%96%87%E6%A1%A3%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/"/>
    <id>https://23yue23.github.io/2019/10/15/详细文档设计规范/</id>
    <published>2019-10-15T02:55:47.000Z</published>
    <updated>2019-10-15T02:57:16.805Z</updated>
    
    <content type="html"><![CDATA[<h4 id="详细设计的目标"><a href="#详细设计的目标" class="headerlink" title="详细设计的目标"></a>详细设计的目标</h4><p>在项目实施之前进行问题、方案等重要项目信息的归纳整理。书写文档的过程中模块负责人能够更深入的思考问题与解决方案，提升对目标的理解、后续工作的质量、效率，降低项目风险。文档本身作为组织资产进行信息载体，发挥长期的价值。</p><h4 id="详细设计文档原则"><a href="#详细设计文档原则" class="headerlink" title="详细设计文档原则"></a>详细设计文档原则</h4><p>能够面向不了解业务&amp;技术背景的人群</p><p>清晰表述完主要问题以及解决方案</p><p>详细设计阶段必须定义接口(也可以单独书写接口文档)</p><p>考虑到测试、运维、产品的主要关注点</p><h4 id="设计文档的格式以及载体"><a href="#设计文档的格式以及载体" class="headerlink" title="设计文档的格式以及载体"></a>设计文档的格式以及载体</h4><p>格式: markdown 或 word(更新时使用审阅模式)</p><p>载体: gitlab , 文档存放项目下doc目录, 每次发版tag携带最新文档</p><h4 id="详细设计的适用场景"><a href="#详细设计的适用场景" class="headerlink" title="详细设计的适用场景"></a>详细设计的适用场景</h4><h5 id="需要写详细设计文档的场景"><a href="#需要写详细设计文档的场景" class="headerlink" title="需要写详细设计文档的场景"></a>需要写详细设计文档的场景</h5><p>新的线上模块</p><p>架构的大调整</p><p>对业务产生较大的影响的版本</p><h5 id="不需要写详细设计文档的场景"><a href="#不需要写详细设计文档的场景" class="headerlink" title="不需要写详细设计文档的场景"></a>不需要写详细设计文档的场景</h5><p>不影响架构bug修复和升级且不影响主体逻辑和接口</p><h4 id="详细设计文档规范"><a href="#详细设计文档规范" class="headerlink" title="详细设计文档规范"></a>详细设计文档规范</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;详细设计的目标&quot;&gt;&lt;a href=&quot;#详细设计的目标&quot; class=&quot;headerlink&quot; title=&quot;详细设计的目标&quot;&gt;&lt;/a&gt;详细设计的目标&lt;/h4&gt;&lt;p&gt;在项目实施之前进行问题、方案等重要项目信息的归纳整理。书写文档的过程中模块负责人能够更深入的思考问题
      
    
    </summary>
    
      <category term="工作文档" scheme="https://23yue23.github.io/categories/%E5%B7%A5%E4%BD%9C%E6%96%87%E6%A1%A3/"/>
    
    
      <category term="详细文档设计规范" scheme="https://23yue23.github.io/tags/%E8%AF%A6%E7%BB%86%E6%96%87%E6%A1%A3%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
  <entry>
    <title>shell-案例篇</title>
    <link href="https://23yue23.github.io/2019/10/15/shell-%E6%A1%88%E4%BE%8B%E7%AF%87/"/>
    <id>https://23yue23.github.io/2019/10/15/shell-案例篇/</id>
    <published>2019-10-15T02:50:56.000Z</published>
    <updated>2019-10-15T03:41:18.297Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line">## 此shell脚本只在bash解释器下测试运行过, sh解释器不保证一定正确</span><br><span class="line">## 关于bash和sh有啥区别, 大家可自行Google, 我建议大家使用bash</span><br><span class="line">## 可能大部分Linux系统, bash跟sh不会有太多区别, 但是如果你用Debian或者Ubuntu的话</span><br><span class="line">## 你会发现之前写的脚本sh运行会爆出一堆语法错误, 因为他们的sh等于Dash, 很蛋疼.</span><br><span class="line">###################</span><br><span class="line"> </span><br><span class="line">PRODUCTLINE=&quot;rta&quot;</span><br><span class="line">PROJECT=&quot;ga-device&quot;</span><br><span class="line"> </span><br><span class="line">## 自带出错邮件报警: 尽量使用邮件组而不是使用具体某个人的邮箱</span><br><span class="line">## 因为科比曾经说过: 朋友来来走走, 冠军旗帜永不倒</span><br><span class="line">## 使用具体某个人的邮箱回头离职了邮件就发不出来了</span><br><span class="line">ALARM_ADDR=&quot;bin.li@mobvista.com&quot;</span><br><span class="line">ALARM_CC=&quot;bin.li@mobvista.com&quot;</span><br><span class="line"> </span><br><span class="line">## 钉钉报警有个好处是你可以建立群组, 而且可以分类, 不重要的信息你</span><br><span class="line">## 可以发到一个群里, 然后大家屏蔽群消息就好, 出问题的时候再去翻</span><br><span class="line">## dingtalkid: 钉钉群讨论的ID, 我想不需要我教你怎么获得这个ID</span><br><span class="line">ALARM_DINGDING_TALKID=&quot;62138ba2d704500d24b21064663659e2288bdf5f6b72d8a8d5895746f2ee0f8f&quot;</span><br><span class="line"># https://oapi.dingtalk.com/robot/send?access_token=62138ba2d704500d24b21064663659e2288bdf5f6b72d8a8d5895746f2ee0f8f</span><br><span class="line">INFO_DINGDING_TALKID=&quot;d49490482e23f0780bf017ad04cb29d027755e0550578ff4324e48f989e7a4c1&quot;</span><br><span class="line"># https://oapi.dingtalk.com/robot/send?access_token=d49490482e23f0780bf017ad04cb29d027755e0550578ff4324e48f989e7a4c1</span><br><span class="line"> </span><br><span class="line">## kibana使用的EleasticSearch的地址, 数据上报到ES, 才能用kibana展示出来</span><br><span class="line">## 尽量用公司统一的, 不要自己单独整</span><br><span class="line">## 如果觉得别人搞的不好用, 尽量推动别人优化</span><br><span class="line">## 而不是自己搭一个扔在那里没人管</span><br><span class="line">ES_ADDR=&quot;bj-report-ELB20151027-2124151593.us-east-1.elb.amazonaws.com:80&quot;</span><br><span class="line">ES_USER=&quot;mob_report&quot;</span><br><span class="line">ES_PASSWD=&quot;Mobvista_256&quot;</span><br><span class="line"> </span><br><span class="line">## 顾名思义, 就是把一个JSON document推到ES</span><br><span class="line">## 这里面有一些概念: docid, doc, index, type(如果不知道啥意思, 自行google)</span><br><span class="line">## 参数:</span><br><span class="line">##   + docid: doc唯一的ID, 很多人喜欢让ES自己生成, 但是这个地方尽量不要,</span><br><span class="line">##     因为将来你的任务失败你还会补数呢, 找一个唯一的ID, 或者拼一个出来,</span><br><span class="line">##     将来补数原来的doc会被自动覆盖掉, 不至于数据重复</span><br><span class="line">##   + doc: json doc</span><br><span class="line">##     任何你想塞进去的信息, 如果你足够聪明, 请塞一个格式化好的时间(北京时区)和</span><br><span class="line">##     一个时间戳进去</span><br><span class="line">function doc2es() &#123;</span><br><span class="line">    local __docid=&quot;$1&quot;</span><br><span class="line">    local __doc=&quot;$2&quot;</span><br><span class="line">    curl -XPUT &quot;$ES_ADDR/mp_rba/cap_updater_jobstatus/$__docid&quot; \</span><br><span class="line">         -H &apos;Content-Type: application/json&apos; \</span><br><span class="line">         -u &quot;$ES_USER:$ES_PASSWD&quot; -d&quot;$__doc&quot;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">## 邮件报警, 会使用全局变量里面的收件人地址 ALARM_ADDR &amp; ALARM_CC</span><br><span class="line">## 两个参数:</span><br><span class="line">##   + sub: 邮件主题</span><br><span class="line">##   + body: 报警内容(别JB图省事, 多写点东西又不会死, 让别人一眼看出来发生了什么吧!)</span><br><span class="line">function email_alarm() &#123;</span><br><span class="line">    local _sub=$1</span><br><span class="line">    local _body=&quot;$2&quot;</span><br><span class="line">    cat &quot;$_body&quot; | mail -s &quot;[$PRODUCTLINE][$PROJECT]$_sub&quot; -c &quot;$ALARM_CC&quot; &quot;$ALARM_ADDR&quot;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">function send_dingding_msg() &#123;</span><br><span class="line">    local _dingtalkid=&quot;$1&quot;</span><br><span class="line">    local _msg=&quot;$2&quot;</span><br><span class="line">    url=&quot;https://oapi.dingtalk.com/robot/send?access_token=$_dingtalkid&quot;</span><br><span class="line">    body=&quot;&#123;</span><br><span class="line">         \&quot;msgtype\&quot;: \&quot;text\&quot;,</span><br><span class="line">         \&quot;text\&quot;: &#123;</span><br><span class="line">             \&quot;content\&quot;: \&quot;[$PRODUCTLINE][$PROJECT] Failed !!! [$_msg]\&quot;</span><br><span class="line">         &#125;,</span><br><span class="line">        \&quot;at\&quot;: &#123;</span><br><span class="line">             \&quot;atMobiles\&quot;: [],</span><br><span class="line">             \&quot;isAtAll\&quot;: false</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;&quot;</span><br><span class="line">    curl &quot;$url&quot;  -H &apos;Content-Type: application/json&apos; -X POST -d &quot;$body&quot;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">## 钉钉报警, 会使用全局变量里面的收件人地址 ALARM_ADDR &amp; ALARM_CC</span><br><span class="line">## 参数:</span><br><span class="line">##   + msg: 报警内容(别JB图省事, 多写点东西又不会死, 让别人一眼看出来发生了什么吧!)</span><br><span class="line">function dingding_alarm() &#123;</span><br><span class="line">    send_dingding_msg $ALARM_DINGDING_TALKID &quot;$1&quot;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">function dingding_info() &#123;</span><br><span class="line">    send_dingding_msg $INFO_DINGDING_TALKID &quot;$1&quot;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">## 就是想让输出多个时间而已</span><br><span class="line">## 参数: 你想打的消息</span><br><span class="line">function info() &#123;</span><br><span class="line">    local _msg=&quot;$1&quot;</span><br><span class="line">    echo &quot;$(date +&quot;%Y-%m-%d %H:%M:%S&quot;) INFO [$_msg]&quot;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">## 就是想让输出多个时间而已</span><br><span class="line">## 参数: 你想打的消息</span><br><span class="line">function error() &#123;</span><br><span class="line">    local _msg=&quot;$1&quot;</span><br><span class="line">    echo &quot;$(date +&quot;%Y-%m-%d %H:%M:%S&quot;) ERROR [$_msg]&quot;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">## 任务运行结束, 清理掉临时文件</span><br><span class="line">## 参数: 给个文件名</span><br><span class="line">function clean_file() &#123;</span><br><span class="line">    local _f=&quot;$1&quot;</span><br><span class="line">    if [ -f $_f ]; then</span><br><span class="line">        info &quot;rm $_f&quot;</span><br><span class="line">        rm $_f</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 任务运行结束, 备份重要结果文件</span><br><span class="line">## 参数: 给个文件名和后缀</span><br><span class="line">## 比如: back_file file-name 2019032013</span><br><span class="line">function back_file() &#123;</span><br><span class="line">    local _f=&quot;$1&quot;</span><br><span class="line">    local _postfix=&quot;$2&quot;</span><br><span class="line">    if [ -f $_f ]; then</span><br><span class="line">        info &quot;mv $_f $_f.$_postfix&quot;</span><br><span class="line">        mv $_f $_f.$_postfix</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"># 为了方便CTI和CVR的计算, 我们需要从s3拉取一些中间结果下来</span><br><span class="line"># 这个地方定义一个下载函数</span><br><span class="line"># 希望达到的效果是, 给定一个输入路径, 可以把这个路径下的所有文件都下载下来</span><br><span class="line"># 并且导到一个目标文件中</span><br><span class="line"># 当然还需要做一下文件大小的check, 别把本地磁盘给撑爆了</span><br><span class="line">function download_from_s3_dir() &#123;</span><br><span class="line">    local _s3_dir=$1</span><br><span class="line">    local _local_file=$2</span><br><span class="line">    local _tmp_index=&quot;__tmp_index_for_download_s3_file__$(date +&quot;%s&quot;).$RANDOM&quot;</span><br><span class="line">    local _sz_max=4000000000</span><br><span class="line">    # local _sz_max=1000</span><br><span class="line">    # check file size 1st</span><br><span class="line">    if [ -f $_tmp_index ]; then</span><br><span class="line">        rm $_tmp_index</span><br><span class="line">    fi</span><br><span class="line">    run_with_check &quot;aws s3 ls $_s3_dir &gt; $_tmp_index&quot;</span><br><span class="line">    if [ 0 -eq $(wc -l $_tmp_index | awk &apos;&#123;print $1&#125;&apos;) ]; then</span><br><span class="line">        echo &quot;WARNING: no file in $_s3_dir&quot;</span><br><span class="line">        touch $_local_file</span><br><span class="line">    else</span><br><span class="line">        local _sz_tt=0</span><br><span class="line">        for sz in $(cat $_tmp_index | awk &apos;&#123;print $3&#125;&apos;)</span><br><span class="line">        do</span><br><span class="line">            echo $sz  # debug</span><br><span class="line">            _sz_tt=$((_sz_tt+$sz))</span><br><span class="line">        done</span><br><span class="line">        if [ $_sz_tt -gt $_sz_max ]; then</span><br><span class="line">            echo &quot;ERROR: files too large exit!!! [$_sz_tt &gt; $_sz_max]&quot;</span><br><span class="line">            exit 1</span><br><span class="line">        fi</span><br><span class="line">        if [ -f $_local_file ]; then</span><br><span class="line">            rm $_local_file</span><br><span class="line">        fi</span><br><span class="line">        for f in $(cat $_tmp_index | awk &apos;&#123;print $3&quot;|&quot;$4&#125;&apos;)</span><br><span class="line">        do</span><br><span class="line">            local _sz=$(echo &quot;$f&quot; | awk -F&apos;|&apos; &apos;&#123;print $1&#125;&apos;)</span><br><span class="line">            local _ff=$(echo &quot;$f&quot; | awk -F&apos;|&apos; &apos;&#123;print $2&#125;&apos;)</span><br><span class="line">            local _ff_local=$_ff&quot;.$(date +&quot;%s&quot;).$RANDOM&quot;</span><br><span class="line">            if [ x&quot;0&quot; = x&quot;$_sz&quot; ]; then</span><br><span class="line">                continue</span><br><span class="line">            fi</span><br><span class="line">            run_with_check &quot;aws s3 cp $_s3_dir$_ff $_ff_local&quot;</span><br><span class="line">            run_with_check &quot;cat $_ff_local &gt;&gt; $_local_file&quot;</span><br><span class="line">            if [ -f $_ff_local ]; then</span><br><span class="line">                rm $_ff_local</span><br><span class="line">            fi</span><br><span class="line">        done</span><br><span class="line">    fi</span><br><span class="line">    if [ -f $_tmp_index ]; then</span><br><span class="line">        rm $_tmp_index</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">## 这个函数我想大家都可以用到</span><br><span class="line">## 把你任务一些可能会失败的操作过程, 比如从s3拷个文件</span><br><span class="line">## 比如执行一个py脚本, 比如curl一个东西</span><br><span class="line">## run_with_check, 发现失败, 自动报警, 而且立马终止任务</span><br><span class="line">## 参数: 你要执行的命令</span><br><span class="line">## 比如: run_with_check &quot;python demo.py&quot;</span><br><span class="line">function run_with_check &#123;</span><br><span class="line">    cmd=&quot;$1&quot;</span><br><span class="line">    info &quot;$cmd&quot;</span><br><span class="line">    eval &quot;$cmd&quot;</span><br><span class="line">    if [ 0 -ne $? ]; then</span><br><span class="line">        error &quot;[$cmd] failed!!!!! exit !!!!!!!!&quot;</span><br><span class="line">        email_alarm &quot;[$PRODUCTLINE][$PROJECT] Failed !!!&quot; &quot;command exit code not 0: $cmd&quot;</span><br><span class="line">        dingding_alarm &quot;command exit code not 0: $cmd&quot;</span><br><span class="line">        exit 1</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="微信报警接口"><a href="#微信报警接口" class="headerlink" title="微信报警接口"></a>微信报警接口</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line"># coding:utf-8</span><br><span class="line">import sys</span><br><span class="line">import urllib2</span><br><span class="line">import time</span><br><span class="line">import json</span><br><span class="line">import requests</span><br><span class="line">import redis</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(&apos;utf-8&apos;)</span><br><span class="line">print sys.argv</span><br><span class="line"> </span><br><span class="line">message = sys.argv[3]   # 位置参数获取title 适用于zabbix</span><br><span class="line">user = sys.argv[1] # 位置参数获取content 适用于zabbix</span><br><span class="line"> </span><br><span class="line">POOL = redis.ConnectionPool(host=&apos;&apos;,port=3721,password=&apos;&apos;,db=1)</span><br><span class="line">rs=redis.Redis(connection_pool=POOL)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def send_msg(user,message):</span><br><span class="line">    # 发送消息</span><br><span class="line">    qs_token = rs.get(&apos;weixin&apos;)</span><br><span class="line">    url = &quot;https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token=&#123;0&#125;&quot;.format(</span><br><span class="line">        qs_token)</span><br><span class="line">    payload = &#123;</span><br><span class="line">        &quot;touser&quot;:user,</span><br><span class="line">        &quot;msgtype&quot;: &quot;text&quot;,</span><br><span class="line">        &quot;agentid&quot;: &quot;2&quot;,</span><br><span class="line">        &quot;text&quot;: &#123;</span><br><span class="line">                   &quot;content&quot;: message</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;safe&quot;: &quot;0&quot;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    ret = requests.post(url, data=json.dumps(payload, ensure_ascii=False))</span><br><span class="line">    print ret.json()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    send_msg(user,message)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 使用方法：</span><br><span class="line">python  wetchat.py mail@qq.com subject message</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="shell-案例篇" scheme="https://23yue23.github.io/categories/shell-%E6%A1%88%E4%BE%8B%E7%AF%87/"/>
    
    
      <category term="shell-案例篇" scheme="https://23yue23.github.io/tags/shell-%E6%A1%88%E4%BE%8B%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>shell-常用篇</title>
    <link href="https://23yue23.github.io/2019/10/15/shell-%E5%B8%B8%E7%94%A8%E7%AF%87/"/>
    <id>https://23yue23.github.io/2019/10/15/shell-常用篇/</id>
    <published>2019-10-15T02:47:25.000Z</published>
    <updated>2019-10-15T02:47:25.334Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="shell-常用篇" scheme="https://23yue23.github.io/categories/shell-%E5%B8%B8%E7%94%A8%E7%AF%87/"/>
    
    
      <category term="shell-常用篇" scheme="https://23yue23.github.io/tags/shell-%E5%B8%B8%E7%94%A8%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>go-常用篇</title>
    <link href="https://23yue23.github.io/2019/10/15/go-%E5%B8%B8%E7%94%A8%E7%AF%87/"/>
    <id>https://23yue23.github.io/2019/10/15/go-常用篇/</id>
    <published>2019-10-15T02:34:37.000Z</published>
    <updated>2019-10-15T02:40:12.116Z</updated>
    
    <content type="html"><![CDATA[<h4 id="编码规范"><a href="#编码规范" class="headerlink" title="编码规范"></a>编码规范</h4><p><a href="http://docscn.studygolang.com/doc/effective_go.html" target="_blank" rel="noopener">http://docscn.studygolang.com/doc/effective_go.html</a></p><h4 id="单测样例"><a href="#单测样例" class="headerlink" title="单测样例"></a>单测样例</h4><p><a href="http://gitlab.mobvista.com/mtech/mtech/blob/master/开发-Go单元测试.md" target="_blank" rel="noopener">http://gitlab.mobvista.com/mtech/mtech/blob/master/开发-Go单元测试.md</a></p><h4 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h4><p>开发可自由选择编辑器，推荐使用IDE：<a href="https://www.jetbrains.com/go/" target="_blank" rel="noopener">https://www.jetbrains.com/go/</a></p><h4 id="常用库"><a href="#常用库" class="headerlink" title="常用库"></a>常用库</h4><p>标准库: <a href="http://docscn.studygolang.com/pkg/" target="_blank" rel="noopener">http://docscn.studygolang.com/pkg/</a><br>日志: <a href="https://github.com/cihub/seelog" target="_blank" rel="noopener">https://github.com/cihub/seelog</a><br>配置: <a href="https://github.com/spf13/viper" target="_blank" rel="noopener">https://github.com/spf13/viper</a><br>uuid: <a href="https://github.com/satori/go.uuid" target="_blank" rel="noopener">https://github.com/satori/go.uuid</a><br>leveldb: <a href="https://github.com/syndtr/goleveldb/leveldb" target="_blank" rel="noopener">https://github.com/syndtr/goleveldb/leveldb</a><br>murmurhash3: <a href="https://github.com/spaolacci/murmur3" target="_blank" rel="noopener">https://github.com/spaolacci/murmur3</a><br>redis: <a href="https://github.com/garyburd/redigo/redis" target="_blank" rel="noopener">https://github.com/garyburd/redigo/redis</a><br>redis-cluster: <a href="https://github.com/chasex/redis-go-cluster" target="_blank" rel="noopener">https://github.com/chasex/redis-go-cluster</a><br>mongo: <a href="http://gopkg.in/mgo.v2" target="_blank" rel="noopener">http://gopkg.in/mgo.v2</a><br>命令行: <a href="http://gopkg.in/alecthomas/kingpin.v2" target="_blank" rel="noopener">http://gopkg.in/alecthomas/kingpin.v2</a><br>grpc: <a href="http://www.grpc.io/docs/quickstart/go.html" target="_blank" rel="noopener">http://www.grpc.io/docs/quickstart/go.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;编码规范&quot;&gt;&lt;a href=&quot;#编码规范&quot; class=&quot;headerlink&quot; title=&quot;编码规范&quot;&gt;&lt;/a&gt;编码规范&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://docscn.studygolang.com/doc/effective_go.html&quot; 
      
    
    </summary>
    
      <category term="go-常用篇" scheme="https://23yue23.github.io/categories/go-%E5%B8%B8%E7%94%A8%E7%AF%87/"/>
    
    
      <category term="go-常用篇" scheme="https://23yue23.github.io/tags/go-%E5%B8%B8%E7%94%A8%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>git-常用篇</title>
    <link href="https://23yue23.github.io/2019/10/14/git-%E5%B8%B8%E7%94%A8%E7%AF%87/"/>
    <id>https://23yue23.github.io/2019/10/14/git-常用篇/</id>
    <published>2019-10-14T05:42:39.000Z</published>
    <updated>2019-10-14T05:46:55.946Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>git config –global user.name “你的名字” 让你全部的Git仓库绑定你的名字</p></blockquote><blockquote><p>git config –global user.email “你的邮箱” 让你全部的Git仓库绑定你的邮箱</p></blockquote><blockquote><p>git init 初始化你的仓库</p></blockquote><blockquote><p>git add . 把工作区的文件全部提交到暂存区</p></blockquote><blockquote><p>git add ./<file>/ 把工作区的<file>文件提交到暂存区</file></file></p></blockquote><blockquote><p>git commit -m “xxx” 把暂存区的所有文件提交到仓库区，暂存区空空荡荡</p></blockquote><blockquote><p>git remote add origin <a href="https://github.com/name/name_cangku.git" target="_blank" rel="noopener">https://github.com/name/name_cangku.git</a> 把本地仓库与远程仓库连接起来</p></blockquote><blockquote><p>git push -u origin master 把仓库区的主分支master提交到远程仓库里</p></blockquote><blockquote><p>git push -u origin &lt;其他分支&gt; 把其他分支提交到远程仓库</p></blockquote><blockquote><p>git status查看当前仓库的状态</p></blockquote><blockquote><p>git diff 查看文件修改的具体内容</p></blockquote><blockquote><p>git log 显示从最近到最远的提交历史</p></blockquote><blockquote><p>git clone + 仓库地址下载克隆文件</p></blockquote><blockquote><p>git reset –hard + 版本号 回溯版本，版本号在commit的时候与master跟随在一起</p></blockquote><blockquote><p>git reflog 显示命令历史</p></blockquote><blockquote><p>git checkout – <file> 撤销命令，用版本库里的文件替换掉工作区的文件。我觉得就像是Git世界的ctrl + z</file></p></blockquote><blockquote><p>git rm 删除版本库的文件</p></blockquote><blockquote><p>git branch 查看当前所有分支</p></blockquote><blockquote><p>git branch &lt;分支名字&gt; 创建分支</p></blockquote><blockquote><p>git checkout &lt;分支名字&gt; 切换到分支</p></blockquote><blockquote><p>git merge &lt;分支名字&gt; 合并分支</p></blockquote><blockquote><p>git branch -d &lt;分支名字&gt; 删除分支,有可能会删除失败，因为Git会保护没有被合并的分支</p></blockquote><blockquote><p>git branch -D + &lt;分支名字&gt; 强行删除，丢弃没被合并的分支</p></blockquote><blockquote><p>git log –graph 查看分支合并图</p></blockquote><blockquote><p>git merge –no-ff &lt;分支名字&gt; 合并分支的时候禁用Fast forward模式,因为这个模式会丢失分支历史信息</p></blockquote><blockquote><p>git stash 当有其他任务插进来时，把当前工作现场“存储”起来,以后恢复后继续工作</p></blockquote><blockquote><p>git stash list 查看你刚刚“存放”起来的工作去哪里了</p></blockquote><blockquote><p>git stash apply 恢复却不删除stash内容</p></blockquote><blockquote><p>git stash drop 删除stash内容</p></blockquote><blockquote><p>git stash pop 恢复的同时把stash内容也删了</p></blockquote><blockquote><p>git remote 查看远程库的信息，会显示origin，远程仓库默认名称为origin</p></blockquote><blockquote><p>git remote -v 显示更详细的信息</p></blockquote><blockquote><p>git pull 把最新的提交从远程仓库中抓取下来，在本地合并,和git push相反</p></blockquote><blockquote><p>git rebase 把分叉的提交历史“整理”成一条直线，看上去更直观</p></blockquote><blockquote><p>git tag 查看所有标签，可以知道历史版本的tag</p></blockquote><blockquote><p>git tag <name> 打标签，默认为HEAD。比如git tag v1.0</name></p></blockquote><blockquote><p>git tag <tagname> &lt;版本号&gt; 把版本号打上标签，版本号就是commit时，跟在旁边的一串字母数字</tagname></p></blockquote><blockquote><p>git show <tagname> 查看标签信息</tagname></p></blockquote><blockquote><p>git tag -a <tagname> -m “&lt;说明&gt;” 创建带说明的标签。-a指定标签名，-m指定说明文字</tagname></p></blockquote><blockquote><p>git tag -d <tagname> 删除标签</tagname></p></blockquote><blockquote><p>git push origin <tagname> 推送某个标签到远程</tagname></p></blockquote><blockquote><p>git push origin –tags 一次性推送全部尚未推送到远程的本地标签</p></blockquote><blockquote><p>git push origin :refs/tags/<tagname> 删除远程标签<tagname></tagname></tagname></p></blockquote><blockquote><p>git config –global color.ui true 让Git显示颜色，会让命令输出看起来更醒目</p></blockquote><blockquote><p>git add -f <file> 强制提交已忽略的的文件</file></p></blockquote><blockquote><p>git check-ignore -v <file> 检查为什么Git会忽略该文件</file></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;git config –global user.name “你的名字” 让你全部的Git仓库绑定你的名字&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;git config –global user.email “你的邮箱” 
      
    
    </summary>
    
      <category term="工具" scheme="https://23yue23.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="git-常用篇" scheme="https://23yue23.github.io/tags/git-%E5%B8%B8%E7%94%A8%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch-学习篇</title>
    <link href="https://23yue23.github.io/2019/10/11/elasticsearch-%E5%AD%A6%E4%B9%A0%E7%AF%87/"/>
    <id>https://23yue23.github.io/2019/10/11/elasticsearch-学习篇/</id>
    <published>2019-10-11T04:05:54.000Z</published>
    <updated>2019-10-11T05:34:13.030Z</updated>
    
    <content type="html"><![CDATA[<p>介绍：<br>一个分布式的实时文档存储，每个字段 可以被索引与搜索<br>一个分布式实时分析搜索引擎<br>能胜任上百个服务节点的扩展，并支持 PB 级别的结构化或者非结构化数据</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;介绍：&lt;br&gt;一个分布式的实时文档存储，每个字段 可以被索引与搜索&lt;br&gt;一个分布式实时分析搜索引擎&lt;br&gt;能胜任上百个服务节点的扩展，并支持 PB 级别的结构化或者非结构化数据&lt;/p&gt;

      
    
    </summary>
    
      <category term="elasticsearch" scheme="https://23yue23.github.io/categories/elasticsearch/"/>
    
    
      <category term="elasticsearch-学习篇" scheme="https://23yue23.github.io/tags/elasticsearch-%E5%AD%A6%E4%B9%A0%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>职业知识图谱</title>
    <link href="https://23yue23.github.io/2019/10/10/%E8%81%8C%E4%B8%9A%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"/>
    <id>https://23yue23.github.io/2019/10/10/职业知识图谱/</id>
    <published>2019-10-10T10:00:19.000Z</published>
    <updated>2019-10-10T10:02:32.293Z</updated>
    
    <content type="html"><![CDATA[<h4 id="大数据通用处理平台"><a href="#大数据通用处理平台" class="headerlink" title="大数据通用处理平台"></a>大数据通用处理平台</h4><p>Spark<br>Flink<br>Hadoop</p><h4 id="分布式存储"><a href="#分布式存储" class="headerlink" title="分布式存储"></a>分布式存储</h4><p>HDFS</p><h4 id="资源调度"><a href="#资源调度" class="headerlink" title="资源调度"></a>资源调度</h4><p>1、Yarn<br>2、Mesos</p><h4 id="机器学习工具"><a href="#机器学习工具" class="headerlink" title="机器学习工具"></a>机器学习工具</h4><p>Mahout</p><p>Spark Mlib</p><p>TensorFlow (Google 系)</p><p>Amazon Machine Learning</p><p>DMTK (微软分布式机器学习工具)</p><h4 id="数据分析-数据仓库-SQL类"><a href="#数据分析-数据仓库-SQL类" class="headerlink" title="数据分析/数据仓库(SQL类)"></a>数据分析/数据仓库(SQL类)</h4><p>Pig</p><p>Hive</p><p>kylin</p><p>Spark SQL,</p><p>Spark DataFrame</p><p>Impala</p><p>Phoenix</p><p>ELK（ElasticSearch，Logstash，Kibana）</p><h4 id="消息队列"><a href="#消息队列" class="headerlink" title="消息队列"></a>消息队列</h4><p>Kafka(纯日志类，大吞吐量)</p><p>RocketMQ</p><p>ZeroMQ</p><p>ActiveMQ</p><p>RabbitMQ</p><h4 id="流式计算"><a href="#流式计算" class="headerlink" title="流式计算"></a>流式计算</h4><p>Storm/JStorm</p><p>Spark Streaming</p><p>Flink</p><h4 id="日志收集"><a href="#日志收集" class="headerlink" title="日志收集"></a>日志收集</h4><p>Scribe</p><p>Flume</p><h4 id="编程语言"><a href="#编程语言" class="headerlink" title="编程语言"></a>编程语言</h4><p>Java</p><p>Python</p><p>R</p><p>Ruby</p><p>Scala</p><h4 id="数据分析挖掘"><a href="#数据分析挖掘" class="headerlink" title="数据分析挖掘"></a>数据分析挖掘</h4><p>MATLAB</p><p>SPSS</p><p>SAS</p><h4 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h4><p>R</p><p>D3.js</p><p>ECharts</p><p>Excle</p><p>Python</p><h4 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a>机器学习</h4><p>机器学习基础</p><p>聚类</p><p>时间序列</p><p>推荐系统</p><p>回归分析</p><p>文本挖掘</p><p>决策树</p><p>支持向量机</p><p>贝叶斯分类</p><p>神经网络</p><p>机器学习工具</p><p>Mahout</p><p>Spark Mlib</p><p>TensorFlow (Google 系)</p><p>Amazon Machine Learning</p><p>DMTK (微软分布式机器学习工具)</p><h4 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h4><p>一致性</p><p>paxos</p><p>raft</p><p>gossip</p><p>数据结构</p><p>栈，队列，链表</p><p>散列表</p><p>二叉树，红黑树，B树</p><p>图</p><p>常用算法<br>1.排序</p><p>插入排序</p><p>桶排序</p><p>堆排序</p><p>2.快速排序</p><p>3,最大子数组</p><p>4.最长公共子序列</p><p>5.最小生成树</p><p>最短路径</p><p>6.矩阵的存储和运算</p><h4 id="云计算"><a href="#云计算" class="headerlink" title="云计算"></a>云计算</h4><p>云服务</p><p>SaaS</p><p>PaaS</p><p>IaaS</p><p>Openstack</p><p>Docker</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;大数据通用处理平台&quot;&gt;&lt;a href=&quot;#大数据通用处理平台&quot; class=&quot;headerlink&quot; title=&quot;大数据通用处理平台&quot;&gt;&lt;/a&gt;大数据通用处理平台&lt;/h4&gt;&lt;p&gt;Spark&lt;br&gt;Flink&lt;br&gt;Hadoop&lt;/p&gt;
&lt;h4 id=&quot;分布式存储
      
    
    </summary>
    
      <category term="职业知识图谱" scheme="https://23yue23.github.io/categories/%E8%81%8C%E4%B8%9A%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"/>
    
    
      <category term="职业知识图谱" scheme="https://23yue23.github.io/tags/%E8%81%8C%E4%B8%9A%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"/>
    
  </entry>
  
  <entry>
    <title>ambari-资料篇</title>
    <link href="https://23yue23.github.io/2019/10/09/ambari-%E8%B5%84%E6%96%99%E7%AF%87/"/>
    <id>https://23yue23.github.io/2019/10/09/ambari-资料篇/</id>
    <published>2019-10-09T09:04:15.000Z</published>
    <updated>2019-10-12T01:51:42.578Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Ambari参考"><a href="#Ambari参考" class="headerlink" title="Ambari参考"></a>Ambari参考</h4><p>Ambari官网: <a href="http://ambari.apache.org/" target="_blank" rel="noopener">http://ambari.apache.org/</a></p><p>Ambari-Github: <a href="https://github.com/apache/ambari/tree/branch-2.7" target="_blank" rel="noopener">https://github.com/apache/ambari/tree/branch-2.7</a></p><p>Ambari参考: <a href="https://www.ibm.com/developerworks/cn/opensource/os-cn-ambari-metrics/index.html" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/opensource/os-cn-ambari-metrics/index.html</a></p><p>Ambari官网-2.7.0: <a href="https://docs.hortonworks.com/HDPDocuments/Ambari/Ambari-2.7.0.0/index.html" target="_blank" rel="noopener">https://docs.hortonworks.com/HDPDocuments/Ambari/Ambari-2.7.0.0/index.html</a></p><p>Apache-Ambari-2.6.2 <a href="http://www.apache.org/dyn/closer.cgi/ambari/ambari-2.6.2" target="_blank" rel="noopener">http://www.apache.org/dyn/closer.cgi/ambari/ambari-2.6.2</a></p><p>Apache-Ambari-2.6.2: <a href="https://cwiki.apache.org/confluence/display/AMBARI/Installation+Guide+for+Ambari+2.6.2" target="_blank" rel="noopener">https://cwiki.apache.org/confluence/display/AMBARI/Installation+Guide+for+Ambari+2.6.2</a></p><p>Apache-Ambari-guide: <a href="https://cwiki.apache.org/confluence/display/AMBARI/Ambari" target="_blank" rel="noopener">https://cwiki.apache.org/confluence/display/AMBARI/Ambari</a></p><p>Apache-Ambari-2.7.0: <a href="https://cwiki.apache.org/confluence/display/AMBARI/Installation+Guide+for+Ambari+2.7.0" target="_blank" rel="noopener">https://cwiki.apache.org/confluence/display/AMBARI/Installation+Guide+for+Ambari+2.7.0</a></p><p>Ambari添加Stack参考：<a href="http://www.itkeyword.com/doc/617736624192567x360" target="_blank" rel="noopener">http://www.itkeyword.com/doc/617736624192567x360</a></p><p>Ambari扩展Stack参考：<a href="https://my.oschina.net/u/2277929/blog/666180?tdsourcetag=s_pctim_aiomsg" target="_blank" rel="noopener">https://my.oschina.net/u/2277929/blog/666180?tdsourcetag=s_pctim_aiomsg</a></p><hr><h4 id="Ambari安装参考"><a href="#Ambari安装参考" class="headerlink" title="Ambari安装参考"></a>Ambari安装参考</h4><blockquote><p>Ambari2.7.0安装: <a href="https://blog.csdn.net/zsj777/article/details/81052859" target="_blank" rel="noopener">https://blog.csdn.net/zsj777/article/details/81052859</a></p></blockquote><h4 id="Ambari学习链接"><a href="#Ambari学习链接" class="headerlink" title="Ambari学习链接"></a>Ambari学习链接</h4><p>Ambari参考教程：<a href="https://www.aliyun.com/jiaocheng/topic_25417_1.html" target="_blank" rel="noopener">https://www.aliyun.com/jiaocheng/topic_25417_1.html</a></p><p>Ambari操作指南：<a href="https://blog.csdn.net/devalone/article/details/80781652" target="_blank" rel="noopener">https://blog.csdn.net/devalone/article/details/80781652</a></p><p>Ambari操作指南：<a href="https://blog.csdn.net/devalone/article/details/80800262" target="_blank" rel="noopener">https://blog.csdn.net/devalone/article/details/80800262</a></p><p>Ambari基础参考：<a href="https://www.ibm.com/developerworks/cn/opensource/os-cn-bigdata-ambari/index.html" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/opensource/os-cn-bigdata-ambari/index.html</a></p><p>Ambari基础应用：<a href="https://www.ibm.com/developerworks/cn/opensource/os-cn-bigdata-ambari/index.html" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/opensource/os-cn-bigdata-ambari/index.html</a></p><p>Ambari-Metrics：<a href="https://www.ibm.com/developerworks/cn/opensource/os-cn-ambari-metrics/" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/opensource/os-cn-ambari-metrics/</a></p><p>Ambari-Alerts：<a href="https://www.ibm.com/developerworks/cn/opensource/os-cn-bigdata-ambari3/" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/opensource/os-cn-bigdata-ambari3/</a></p><p>Ambari-RoadMap：<a href="https://cwiki.apache.org/confluence/pages/viewpage.action?pageId=30755705" target="_blank" rel="noopener">https://cwiki.apache.org/confluence/pages/viewpage.action?pageId=30755705</a></p><p>Hortonworks链接：<a href="https://hortonworks.com/apache/ambari/" target="_blank" rel="noopener">https://hortonworks.com/apache/ambari/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Ambari参考&quot;&gt;&lt;a href=&quot;#Ambari参考&quot; class=&quot;headerlink&quot; title=&quot;Ambari参考&quot;&gt;&lt;/a&gt;Ambari参考&lt;/h4&gt;&lt;p&gt;Ambari官网: &lt;a href=&quot;http://ambari.apache.org/&quot; 
      
    
    </summary>
    
      <category term="ambari" scheme="https://23yue23.github.io/categories/ambari/"/>
    
    
      <category term="ambari-资料篇" scheme="https://23yue23.github.io/tags/ambari-%E8%B5%84%E6%96%99%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>Ambari-学习篇</title>
    <link href="https://23yue23.github.io/2019/10/09/ambari-%E5%AD%A6%E4%B9%A0%E7%AF%87/"/>
    <id>https://23yue23.github.io/2019/10/09/ambari-学习篇/</id>
    <published>2019-10-09T09:04:08.000Z</published>
    <updated>2019-10-12T02:04:25.953Z</updated>
    
    <content type="html"><![CDATA[<h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(1).</span><br><span class="line">Ambari的作用:就是创建、管理、监视 Hadoop 的集群，</span><br><span class="line">这里的Hadoop是广义，指的是Hadoop整个生态圈（例如 Hive，Hbase，Sqoop，Zookeeper 等）</span><br><span class="line">Ambari就是为了让Hadoop以及相关的大数据软件更容易使用的一个工具</span><br><span class="line">(2).</span><br><span class="line">Ambari 自身也是一个分布式架构的软件，主要由两部分组成：Ambari Server 和 Ambari Agent。</span><br><span class="line">用户通过 Ambari Server 通知 Ambari Agent 安装对应的软件；</span><br><span class="line">Agent 会定时地发送各个机器每个软件模块的状态给 Ambari Server，最终这些状态信息会呈现在 Ambari 的 GUI，方便用户了解到集群的各种状态，并进行相应的维护。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span 
      
    
    </summary>
    
      <category term="Ambari" scheme="https://23yue23.github.io/categories/Ambari/"/>
    
    
      <category term="Ambari-学习篇" scheme="https://23yue23.github.io/tags/Ambari-%E5%AD%A6%E4%B9%A0%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>hbase-资料篇</title>
    <link href="https://23yue23.github.io/2019/10/09/hbase-%E8%B5%84%E6%96%99%E7%AF%87/"/>
    <id>https://23yue23.github.io/2019/10/09/hbase-资料篇/</id>
    <published>2019-10-09T08:57:45.000Z</published>
    <updated>2019-10-09T09:08:02.107Z</updated>
    
    <content type="html"><![CDATA[<h4 id="HBase参考文档："><a href="#HBase参考文档：" class="headerlink" title="HBase参考文档："></a>HBase参考文档：</h4><p>HBase官网链接: <a href="https://hbase.apache.org/" target="_blank" rel="noopener">https://hbase.apache.org/</a><br>HBase官方文档: <a href="http://hbase.apache.org/book.html" target="_blank" rel="noopener">http://hbase.apache.org/book.html</a><br>HBase+Spark整合参考: <a href="http://hbase.apache.org/book.html#spark" target="_blank" rel="noopener">http://hbase.apache.org/book.html#spark</a><br>HBase中文文档: <a href="https://www.w3cschool.cn/hbase_doc/" target="_blank" rel="noopener">https://www.w3cschool.cn/hbase_doc/</a><br>HBase教程文档: <a href="https://www.yiibai.com/hbase/" target="_blank" rel="noopener">https://www.yiibai.com/hbase/</a><br>hbase-help：<a href="http://hbase-help.com/" target="_blank" rel="noopener">http://hbase-help.com/</a><br>HBase：<a href="https://pan.baidu.com/s/1jILzgns" target="_blank" rel="noopener">https://pan.baidu.com/s/1jILzgns</a><br>CSDN HBase资料库：<a href="http://lib.csdn.net/hbase/node/734" target="_blank" rel="noopener">http://lib.csdn.net/hbase/node/734</a></p><p>知乎HBase讨论：<a href="https://www.zhihu.com/topic/19600820/hot" target="_blank" rel="noopener">https://www.zhihu.com/topic/19600820/hot</a></p><h4 id="HBase架构参考："><a href="#HBase架构参考：" class="headerlink" title="HBase架构参考："></a>HBase架构参考：</h4><p>深入HBase架构参考: <a href="https://blog.csdn.net/xiaolang85/article/details/70054783" target="_blank" rel="noopener">https://blog.csdn.net/xiaolang85/article/details/70054783</a><br>深入理解HBase架构: <a href="https://blog.csdn.net/Yaokai_AssultMaster/article/details/72877127" target="_blank" rel="noopener">https://blog.csdn.net/Yaokai_AssultMaster/article/details/72877127</a><br>HBase底层存储参考: <a href="http://www.cnblogs.com/bonelee/p/6279248.html" target="_blank" rel="noopener">http://www.cnblogs.com/bonelee/p/6279248.html</a><br>HBase高性能分析: <a href="https://mp.weixin.qq.com/s/VCZz8rG9hIK7IKvbYLz0pQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/VCZz8rG9hIK7IKvbYLz0pQ</a></p><h4 id="HBase-AWS参考："><a href="#HBase-AWS参考：" class="headerlink" title="HBase-AWS参考："></a>HBase-AWS参考：</h4><p>HBase-AWS部署: <a href="https://docs.aws.amazon.com/zh_cn/emr/latest/ReleaseGuide/emr-hbase.html" target="_blank" rel="noopener">https://docs.aws.amazon.com/zh_cn/emr/latest/ReleaseGuide/emr-hbase.html</a><br>HBase-AWS-S3: <a href="https://docs.aws.amazon.com/zh_cn/emr/latest/ReleaseGuide/emr-hbase-s3.html" target="_blank" rel="noopener">https://docs.aws.amazon.com/zh_cn/emr/latest/ReleaseGuide/emr-hbase-s3.html</a><br>HBase+Hive参考: <a href="https://aws.amazon.com/cn/blogs/big-data/combine-nosql-and-massively-parallel-analytics-using-apache-hbase-and-apache-hive-on-amazon-emr/" target="_blank" rel="noopener">https://aws.amazon.com/cn/blogs/big-data/combine-nosql-and-massively-parallel-analytics-using-apache-hbase-and-apache-hive-on-amazon-emr/</a></p><h4 id="HBase下载参考："><a href="#HBase下载参考：" class="headerlink" title="HBase下载参考："></a>HBase下载参考：</h4><p>官网版本：<a href="http://archive.apache.org/dist/hbase/" target="_blank" rel="noopener">http://archive.apache.org/dist/hbase/</a></p><p>CDH版本(稳定,推荐)：<a href="http://archive.cloudera.com/cdh5/" target="_blank" rel="noopener">http://archive.cloudera.com/cdh5/</a></p><h4 id="Phoenix参考链接"><a href="#Phoenix参考链接" class="headerlink" title="Phoenix参考链接"></a>Phoenix参考链接</h4><p>Phoenix官网: <a href="http://phoenix.apache.org/" target="_blank" rel="noopener">http://phoenix.apache.org/</a><br>Phoenix下载: <a href="http://apache.fayea.com/phoenix/" target="_blank" rel="noopener">http://apache.fayea.com/phoenix/</a><br>Phoenix下载: <a href="https://archive.apache.org/dist/phoenix/" target="_blank" rel="noopener">https://archive.apache.org/dist/phoenix/</a><br>Phoenix-Github: <a href="https://github.com/apache/phoenix.git" target="_blank" rel="noopener">https://github.com/apache/phoenix.git</a></p><p>Phoenix加载数据：<a href="http://phoenix.apache.org/bulk_dataload.html" target="_blank" rel="noopener">http://phoenix.apache.org/bulk_dataload.html</a><br>Phoenix二级索引: <a href="http://phoenix.apache.org/secondary_indexing.html" target="_blank" rel="noopener">http://phoenix.apache.org/secondary_indexing.html</a><br>Phoenix安装参考: <a href="https://phoenix.apache.org/download.html#Installation" target="_blank" rel="noopener">https://phoenix.apache.org/download.html#Installation</a></p><p>ALI-Phoenix入门: <a href="https://help.aliyun.com/document_detail/53716.html?spm=a2c4g.11186623.4.1.mfLv99" target="_blank" rel="noopener">https://help.aliyun.com/document_detail/53716.html?spm=a2c4g.11186623.4.1.mfLv99</a><br>ALI-HBase指南: <a href="https://help.aliyun.com/document_detail/52209.html?spm=a2c4g.11186623.6.559.YisTAt" target="_blank" rel="noopener">https://help.aliyun.com/document_detail/52209.html?spm=a2c4g.11186623.6.559.YisTAt</a></p><h4 id="HBase-Phoenix参考"><a href="#HBase-Phoenix参考" class="headerlink" title="HBase+Phoenix参考"></a>HBase+Phoenix参考</h4><p>Phoenix入门到精通: <a href="https://yq.aliyun.com/articles/574090?spm=a2c4g.11186623.2.3.CCfNRU" target="_blank" rel="noopener">https://yq.aliyun.com/articles/574090?spm=a2c4g.11186623.2.3.CCfNRU</a><br>Phoenix链接HBase: <a href="https://blog.csdn.net/u010429286/article/details/70054232" target="_blank" rel="noopener">https://blog.csdn.net/u010429286/article/details/70054232</a><br>HBase整合Phoenix01: <a href="https://www.cnblogs.com/ballwql/p/8371234.html" target="_blank" rel="noopener">https://www.cnblogs.com/ballwql/p/8371234.html</a><br>Phoenix命令参考: <a href="https://blog.csdn.net/high2011/article/details/72772462" target="_blank" rel="noopener">https://blog.csdn.net/high2011/article/details/72772462</a></p><h4 id="HBase-Spark整合应用"><a href="#HBase-Spark整合应用" class="headerlink" title="HBase+Spark整合应用"></a>HBase+Spark整合应用</h4><h5 id="Spark访问HBase参考"><a href="#Spark访问HBase参考" class="headerlink" title="Spark访问HBase参考"></a>Spark访问HBase参考</h5><p>Spark访问HBase01: <a href="https://www.cnblogs.com/xing901022/p/8486290.html" target="_blank" rel="noopener">https://www.cnblogs.com/xing901022/p/8486290.html</a></p><p>hortonworks-spark/shc github：<a href="https://github.com/hortonworks-spark/shc" target="_blank" rel="noopener">https://github.com/hortonworks-spark/shc</a><br>maven仓库地址: <a href="http://mvnrepository.com/artifact/org.apache.hbase/hbase-spark" target="_blank" rel="noopener">http://mvnrepository.com/artifact/org.apache.hbase/hbase-spark</a><br>Hbase spark sql/ dataframe官方文档：<a href="https://hbase.apache.org/book.html#_sparksql_dataframes" target="_blank" rel="noopener">https://hbase.apache.org/book.html#_sparksql_dataframes</a><br>Hbase-spark 2.0.0-alpha4已经公开在maven仓库: <a href="http://mvnrepository.com/artifact/org.apache.hbase/hbase-spark" target="_blank" rel="noopener">http://mvnrepository.com/artifact/org.apache.hbase/hbase-spark</a></p><h5 id="Spark读写HBase参考"><a href="#Spark读写HBase参考" class="headerlink" title="Spark读写HBase参考"></a>Spark读写HBase参考</h5><p>HDP-SHC: <a href="https://github.com/hortonworks-spark/shc" target="_blank" rel="noopener">https://github.com/hortonworks-spark/shc</a></p><p>HBase-Java-API: <a href="https://www.cnblogs.com/liuwei6/p/6842536.html" target="_blank" rel="noopener">https://www.cnblogs.com/liuwei6/p/6842536.html</a><br>HBase-MapReduce: <a href="http://www.cnblogs.com/liuwei6/p/6855467.html" target="_blank" rel="noopener">http://www.cnblogs.com/liuwei6/p/6855467.html</a><br>HBase-Client-API: <a href="https://blog.csdn.net/vori2010/article/details/78536327" target="_blank" rel="noopener">https://blog.csdn.net/vori2010/article/details/78536327</a><br>HBaseClient基本操作: <a href="https://www.cnblogs.com/wzzkaifa/p/7323279.html" target="_blank" rel="noopener">https://www.cnblogs.com/wzzkaifa/p/7323279.html</a></p><p>HBase-Put操作: <a href="https://blog.csdn.net/dongbeiMan/article/details/51768251" target="_blank" rel="noopener">https://blog.csdn.net/dongbeiMan/article/details/51768251</a><br>HBase-Put操作: <a href="https://blog.csdn.net/mianshui1105/article/details/53305966" target="_blank" rel="noopener">https://blog.csdn.net/mianshui1105/article/details/53305966</a></p><p>Spark读写HBase: <a href="https://blog.csdn.net/u011812294/article/details/72553150" target="_blank" rel="noopener">https://blog.csdn.net/u011812294/article/details/72553150</a><br>Spark读写数据库: <a href="https://blog.csdn.net/zilong_zilong/article/details/52529263" target="_blank" rel="noopener">https://blog.csdn.net/zilong_zilong/article/details/52529263</a><br>Spark统计HBase条数: <a href="https://blog.csdn.net/u012871493/article/details/52701289" target="_blank" rel="noopener">https://blog.csdn.net/u012871493/article/details/52701289</a><br>SparkSQL+HBase: <a href="https://hbase.apache.org/book.html#_sparksql_dataframes" target="_blank" rel="noopener">https://hbase.apache.org/book.html#_sparksql_dataframes</a><br>Spark-DataFrame-HBase: <a href="https://www.cnblogs.com/xing901022/p/8486290.html" target="_blank" rel="noopener">https://www.cnblogs.com/xing901022/p/8486290.html</a></p><p>HBase自定义比较器: <a href="http://lucky-xingxing.iteye.com/blog/2185072" target="_blank" rel="noopener">http://lucky-xingxing.iteye.com/blog/2185072</a></p><h5 id="异常参考"><a href="#异常参考" class="headerlink" title="异常参考"></a>异常参考</h5><p>异常参考01: <a href="http://www.aboutyun.com/forum.php?mod=viewthread&amp;action=printable&amp;tid=17450" target="_blank" rel="noopener">http://www.aboutyun.com/forum.php?mod=viewthread&amp;action=printable&amp;tid=17450</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;HBase参考文档：&quot;&gt;&lt;a href=&quot;#HBase参考文档：&quot; class=&quot;headerlink&quot; title=&quot;HBase参考文档：&quot;&gt;&lt;/a&gt;HBase参考文档：&lt;/h4&gt;&lt;p&gt;HBase官网链接: &lt;a href=&quot;https://hbase.apac
      
    
    </summary>
    
      <category term="hbase" scheme="https://23yue23.github.io/categories/hbase/"/>
    
    
      <category term="hbase-资料篇" scheme="https://23yue23.github.io/tags/hbase-%E8%B5%84%E6%96%99%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>kudu-资料篇</title>
    <link href="https://23yue23.github.io/2019/10/09/kudu-%E8%B5%84%E6%96%99%E7%AF%87/"/>
    <id>https://23yue23.github.io/2019/10/09/kudu-资料篇/</id>
    <published>2019-10-09T08:40:32.000Z</published>
    <updated>2019-10-09T08:40:50.766Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="kudu" scheme="https://23yue23.github.io/categories/kudu/"/>
    
    
      <category term="kudu-资料篇" scheme="https://23yue23.github.io/tags/kudu-%E8%B5%84%E6%96%99%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>kudu-学习篇</title>
    <link href="https://23yue23.github.io/2019/10/09/kudu-%E5%AD%A6%E4%B9%A0%E7%AF%87/"/>
    <id>https://23yue23.github.io/2019/10/09/kudu-学习篇/</id>
    <published>2019-10-09T08:40:21.000Z</published>
    <updated>2019-10-09T08:45:57.167Z</updated>
    
    <content type="html"><![CDATA[<h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><blockquote><p>Kudu是基于Hadoop平台的列式存储系统。</p></blockquote><h4 id="Kudu使用场景"><a href="#Kudu使用场景" class="headerlink" title="Kudu使用场景"></a>Kudu使用场景</h4><blockquote><p>适用于既有随机访问，也有批量数据扫描的复合场景</p></blockquote><blockquote><p>适用于高计算量的场景</p></blockquote><blockquote><p>充分利用高性能存储设备</p></blockquote><blockquote><p>支持数据更新，避免数据反复迁移</p></blockquote><blockquote><p>支持跨地域的实时数据备份和查询</p></blockquote><h4 id="Kudu的优势"><a href="#Kudu的优势" class="headerlink" title="Kudu的优势"></a>Kudu的优势</h4><blockquote><p>支持update和upsert操作</p></blockquote><blockquote><p>结构化数据模型</p></blockquote><blockquote><p>与imapla或spark集成后，可通过sql操作，使用方便</p></blockquote><blockquote><p>一个table由多个tablet组成，对分区查看、扩容和数据高可用支持非常好</p></blockquote><h4 id="性能压测："><a href="#性能压测：" class="headerlink" title="性能压测："></a>性能压测：</h4><h5 id="写入性能测试"><a href="#写入性能测试" class="headerlink" title="写入性能测试"></a>写入性能测试</h5><pre><code>executor-cores=2      num-executors=30    executor-memory=4G</code></pre><p>小时级别写（LZ4 ）：源数据2000W行，38G，耗时1.4min，平均23w条/s。</p><p>小时级别写（ZLIB）：源数据1940W行，34.9G，耗时2min，平均16.2w条/s。</p><h5 id="读取性能测试"><a href="#读取性能测试" class="headerlink" title="读取性能测试"></a>读取性能测试</h5><pre><code>executor-cores=2      num-executors=50    executor-memory=4G</code></pre><p>天级别读（LZ4 ）：源数据2.8亿行，541.7 G，耗时10min，平均46.6w条/s。</p><p>天级别读（ZLIB）：源数据3.2亿行，581.7 G，耗时15min，平均35.7w条/s。</p><h5 id="增加新字段性能测试"><a href="#增加新字段性能测试" class="headerlink" title="增加新字段性能测试"></a>增加新字段性能测试</h5><pre><code>executor-cores=2      num-executors=30    executor-memory=4G</code></pre><p>天级别增加（LZ4 ）：源数据4.74亿行，10个新列，耗时17min，平均46.5w条/s。（先读hive表，再选10列插入kudu中。所以其中包括读837G的text格式hive表全量读的时间，真实插入时间理应更少）</p><p>天级别增加（ZLIB）：源数据3.2亿行，10个新列，耗时12min，平均44.7w条/s。（包括读581G的text格式hive表全量读的时间）</p><h4 id="Kudu接口"><a href="#Kudu接口" class="headerlink" title="Kudu接口"></a>Kudu接口</h4><p>在KuduHandle.scala中封装了spark操作kudu的常用接口，在KuduHandleExample.scala中给出了Kudu接口的使用示例。</p><p>业务开发时可直接使用封装在 train_data_flow的dataflow-sdk中的方法，包括saveDFInsertKuduTable()、saveDFUpsertKuduTable()两种插入数据的方法，和读取kudu表数据的 kudu() 方法，以及addKuduColumns()加列方法。</p><h5 id="接口使用注意事项："><a href="#接口使用注意事项：" class="headerlink" title="接口使用注意事项："></a>接口使用注意事项：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1、通过读数据 kudu() 接口返回的df，注册临时视图后可直接用sparkSQL读取，</span><br><span class="line">   但必须使用between或者in来指定range分区字段的范围（目前字段是hour_id），</span><br><span class="line">   否则会变成全表扫描，效率极低！！！</span><br><span class="line"></span><br><span class="line">2、kudu引擎暂不支持sparkSQL中 &lt;、&gt;、or 这些谓词下推，支持like，</span><br><span class="line">   但仅限于“201907%”这种形式，不支持“201907%02”这种形式；</span><br><span class="line">  （只要正确指定了range分区字段，其他字段对读取效率影响不大）</span><br><span class="line"></span><br><span class="line">3、saveDFInsertKuduTable()用于base特征的小时级入库，会根据小时时间新建range分区，</span><br><span class="line">   saveDFUpsertKuduTable()用于插入新列数据，除base数据的小时级入库外，皆用此方法插入数据；</span><br><span class="line"></span><br><span class="line">4、待插入数据df必须包含所有的主键，且主键不可为空值；</span><br><span class="line"></span><br><span class="line">5、删除kudu分区会同时删除分区内的数据，慎用。</span><br></pre></td></tr></table></figure><h4 id="Alluxio-FUSE-测试"><a href="#Alluxio-FUSE-测试" class="headerlink" title="Alluxio FUSE 测试"></a>Alluxio FUSE 测试</h4><ol><li>IO基本性能测试，拷贝一个768M的文件。</li></ol><blockquote><p>读    130M/s    90M/s</p></blockquote><blockquote><p>写    80M/s    194M/s</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Kudu是基于Hadoop平台的列式存储系统。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;Kudu使用场
      
    
    </summary>
    
      <category term="kudu" scheme="https://23yue23.github.io/categories/kudu/"/>
    
    
      <category term="kudu-学习篇" scheme="https://23yue23.github.io/tags/kudu-%E5%AD%A6%E4%B9%A0%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>clickhouse-资料篇</title>
    <link href="https://23yue23.github.io/2019/10/09/clickhouse-%E8%B5%84%E6%96%99%E7%AF%87/"/>
    <id>https://23yue23.github.io/2019/10/09/clickhouse-资料篇/</id>
    <published>2019-10-09T08:05:12.000Z</published>
    <updated>2019-10-09T10:27:44.670Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="clickhouse" scheme="https://23yue23.github.io/categories/clickhouse/"/>
    
    
      <category term="clickhouse-资料篇" scheme="https://23yue23.github.io/tags/clickhouse-%E8%B5%84%E6%96%99%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>kylin-问题篇</title>
    <link href="https://23yue23.github.io/2019/10/09/kylin-%E9%97%AE%E9%A2%98%E7%AF%87/"/>
    <id>https://23yue23.github.io/2019/10/09/kylin-问题篇/</id>
    <published>2019-10-09T07:26:08.000Z</published>
    <updated>2019-10-09T07:38:42.872Z</updated>
    
    <content type="html"><![CDATA[<h4 id="远程连接服务器数据库报错：Host-‘XXXXXX’-is-blocked-because-of-many-connection-errors"><a href="#远程连接服务器数据库报错：Host-‘XXXXXX’-is-blocked-because-of-many-connection-errors" class="headerlink" title="远程连接服务器数据库报错：Host ‘XXXXXX’ is blocked because of many connection errors"></a>远程连接服务器数据库报错：Host ‘XXXXXX’ is blocked because of many connection errors</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">问题描述：</span><br><span class="line">Kylin聚合任务MR作业运行时，报错：Host ‘XXXXXX’ is blocked because of many connection errors</span><br><span class="line"></span><br><span class="line">错误原因：</span><br><span class="line">同一ip在短时间内产生太多（超过mysql数据库max_connection_errors的最大值）终端的数据库连接而导致的阻塞；</span><br><span class="line"></span><br><span class="line">解决方案（根据实际情况来选择解决方案）：</span><br><span class="line"></span><br><span class="line">1、可以更改max_connection_errors的值，即提高允许的max_connection_errors的数量</span><br><span class="line"></span><br><span class="line">（1）首先查看该属性设置为多大：命令：show global variables like &apos;%max_connect_errors%&apos;;如果需要永久生效，得去修改mysql配置文件里相应属性。可能配置文件里没有这个属性，需要自己手动添加</span><br><span class="line"></span><br><span class="line">（2）注意：</span><br><span class="line"> 当客户端连接服务端超时(超过connect_timeout), 服务端就会给这个客户端记录一次error，当出错的次数达到max_connect_errors的时候，这个客户端就会被锁定。所以根据业务来尽量把这个值设置大一点，mysql默认值为10，我们可以根据具体需要设置大一点，这里设置为1000.（并非越大越好，越大被攻击时安全性越低）；</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、使用清除缓存的方法，这样就会把计数清理掉，进入mysql控制台，执行：flush hosts;</span><br><span class="line"></span><br><span class="line">参考链接：https://jingyan.baidu.com/album/9f7e7ec087dcbe6f2815542d.html</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;远程连接服务器数据库报错：Host-‘XXXXXX’-is-blocked-because-of-many-connection-errors&quot;&gt;&lt;a href=&quot;#远程连接服务器数据库报错：Host-‘XXXXXX’-is-blocked-because-of-
      
    
    </summary>
    
      <category term="kylin" scheme="https://23yue23.github.io/categories/kylin/"/>
    
    
      <category term="kylin-问题篇" scheme="https://23yue23.github.io/tags/kylin-%E9%97%AE%E9%A2%98%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>python-资料篇</title>
    <link href="https://23yue23.github.io/2019/10/09/python-%E8%B5%84%E6%96%99%E7%AF%87/"/>
    <id>https://23yue23.github.io/2019/10/09/python-资料篇/</id>
    <published>2019-10-09T05:41:58.000Z</published>
    <updated>2019-10-10T09:19:18.962Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://www.liaoxuefeng.com/wiki/1016959663602400" target="_blank" rel="noopener">廖雪峰</a></p></blockquote><blockquote><p><a href="http://www.icourse163.org/learn/BIT-268001?tid=1002001005#/learn/content" target="_blank" rel="noopener">中国大学mocc</a></p></blockquote><blockquote><p><a href="https://github.com/jackfrued/Python-100-Days" target="_blank" rel="noopener">Python - 100天从新手到大师</a></p></blockquote><blockquote><p><a href="https://mlog.club/article/42724" target="_blank" rel="noopener">超实用的 30 段 Python 案例</a>  </p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.liaoxuefeng.com/wiki/1016959663602400&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;廖雪峰&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockq
      
    
    </summary>
    
      <category term="python" scheme="https://23yue23.github.io/categories/python/"/>
    
    
      <category term="python-资料篇" scheme="https://23yue23.github.io/tags/python-%E8%B5%84%E6%96%99%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>python-学习篇</title>
    <link href="https://23yue23.github.io/2019/10/09/python-%E5%AD%A6%E4%B9%A0%E7%AF%87/"/>
    <id>https://23yue23.github.io/2019/10/09/python-学习篇/</id>
    <published>2019-10-09T05:41:48.000Z</published>
    <updated>2019-10-15T02:46:05.018Z</updated>
    
    <content type="html"><![CDATA[<h4 id="编码规范"><a href="#编码规范" class="headerlink" title="编码规范"></a>编码规范</h4><p><a href="http://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/contents/" target="_blank" rel="noopener">http://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/contents/</a></p><h4 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h4><p><a href="https://www.jetbrains.com/pycharm/" target="_blank" rel="noopener">https://www.jetbrains.com/pycharm/</a></p><h4 id="常用库"><a href="#常用库" class="headerlink" title="常用库:"></a>常用库:</h4><blockquote><p>pymysql</p></blockquote><blockquote><p>httplib2</p></blockquote><blockquote><p>kafka</p></blockquote><blockquote><p>kafka-python</p></blockquote><blockquote><p>pymongo</p></blockquote><blockquote><p>psycopg2</p></blockquote><blockquote><p>elasticsearch</p></blockquote><blockquote><p>murmurhash3</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;编码规范&quot;&gt;&lt;a href=&quot;#编码规范&quot; class=&quot;headerlink&quot; title=&quot;编码规范&quot;&gt;&lt;/a&gt;编码规范&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://zh-google-styleguide.readthedocs.io/en/latest/
      
    
    </summary>
    
      <category term="python" scheme="https://23yue23.github.io/categories/python/"/>
    
    
      <category term="python-学习篇" scheme="https://23yue23.github.io/tags/python-%E5%AD%A6%E4%B9%A0%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>scala-资料篇</title>
    <link href="https://23yue23.github.io/2019/10/09/scala-%E8%B5%84%E6%96%99%E7%AF%87/"/>
    <id>https://23yue23.github.io/2019/10/09/scala-资料篇/</id>
    <published>2019-10-09T03:45:21.000Z</published>
    <updated>2019-10-09T03:47:36.803Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>官网：<a href="https://www.scala-lang.org/" target="_blank" rel="noopener">scala官网</a></p></blockquote><blockquote><p>易百：<a href="https://www.yiibai.com/scala/scala_strings.html" target="_blank" rel="noopener">scala教程</a></p></blockquote><blockquote></blockquote><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;官网：&lt;a href=&quot;https://www.scala-lang.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;scala官网&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;易百：&lt;a 
      
    
    </summary>
    
      <category term="scala" scheme="https://23yue23.github.io/categories/scala/"/>
    
    
      <category term="scala-资料篇" scheme="https://23yue23.github.io/tags/scala-%E8%B5%84%E6%96%99%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>scala-学习篇</title>
    <link href="https://23yue23.github.io/2019/10/09/scala-%E5%AD%A6%E4%B9%A0%E7%AF%87/"/>
    <id>https://23yue23.github.io/2019/10/09/scala-学习篇/</id>
    <published>2019-10-09T03:45:08.000Z</published>
    <updated>2019-10-09T03:45:30.556Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="scala" scheme="https://23yue23.github.io/categories/scala/"/>
    
    
      <category term="scala-学习篇" scheme="https://23yue23.github.io/tags/scala-%E5%AD%A6%E4%B9%A0%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>代码库-表达式scala校验</title>
    <link href="https://23yue23.github.io/2019/10/09/%E4%BB%A3%E7%A0%81%E5%BA%93-%E8%A1%A8%E8%BE%BE%E5%BC%8Fscala%E6%A0%A1%E9%AA%8C/"/>
    <id>https://23yue23.github.io/2019/10/09/代码库-表达式scala校验/</id>
    <published>2019-10-09T02:54:46.000Z</published>
    <updated>2019-10-09T03:23:01.374Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Regex常用的方法"><a href="#Regex常用的方法" class="headerlink" title="Regex常用的方法"></a>Regex常用的方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">findAllIn 方法找到line中所有符合正则的字符串，可以通过 toArray 方法来将匹配到的结果存放到 Array 中。也可以方法哦for循环中，遍历出符合条件的匹配。</span><br><span class="line">findFirstIn 只匹配第一个符合正则的字符串就停止了</span><br></pre></td></tr></table></figure><h4 id="设备id-校验"><a href="#设备id-校验" class="headerlink" title="设备id 校验"></a>设备id 校验</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">val deviceIdReg = &quot;^[0-9a-fA-F]&#123;8&#125;(-[0-9a-fA-F]&#123;4&#125;)&#123;3&#125;-[0-9a-fA-F]&#123;12&#125;$&quot;.r</span><br><span class="line"># EF453E92-B6D0-48B9-912B-A156B5C6B90F</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def validateDeviceId(deviceId: String): Boolean = &#123;</span><br><span class="line">    deviceIdReg.findFirstMatchIn(deviceId).isDefined</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="查找匹配部分"><a href="#查找匹配部分" class="headerlink" title="查找匹配部分"></a>查找匹配部分</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">val p = &quot;[0-9]+&quot;.r  </span><br><span class="line"></span><br><span class="line">p.findAllIn(&quot;2 ad 12ab ab21 23&quot;).toList // List(2, 12, 21, 23)</span><br><span class="line"></span><br><span class="line">p.findFirstMatchIn(&quot;abc123xyz&quot;).get // scala.util.matching.Regex.Match = 123</span><br></pre></td></tr></table></figure><p>参考资料：<br>    1.<a href="http://www.runoob.com/scala/scala-regular-expressions.html" target="_blank" rel="noopener">正则表达式（regular expression）以及常用语法</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Regex常用的方法&quot;&gt;&lt;a href=&quot;#Regex常用的方法&quot; class=&quot;headerlink&quot; title=&quot;Regex常用的方法&quot;&gt;&lt;/a&gt;Regex常用的方法&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;t
      
    
    </summary>
    
      <category term="代码库" scheme="https://23yue23.github.io/categories/%E4%BB%A3%E7%A0%81%E5%BA%93/"/>
    
    
      <category term="代码库-表达式scala校验" scheme="https://23yue23.github.io/tags/%E4%BB%A3%E7%A0%81%E5%BA%93-%E8%A1%A8%E8%BE%BE%E5%BC%8Fscala%E6%A0%A1%E9%AA%8C/"/>
    
  </entry>
  
</feed>
